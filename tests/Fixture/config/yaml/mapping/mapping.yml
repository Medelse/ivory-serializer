Ivory\Tests\Serializer\Fixture\ArrayFixture:
    properties:
        scalars:
            type: array<value=string>
        objects:
            type: array<value=Ivory\Tests\Serializer\Fixture\ArrayFixture>
        types:
            type: "array<key=int, value=string>"
        inceptions:
            type: "array<key=string, value=array<key=int, value=string>>"

Ivory\Tests\Serializer\Fixture\ScalarFixture:
    properties:
        bool:
            alias: boolean
            type: bool
        float:
            type: float
        int:
            type: int
        string:
            type: string
        type:
            type: Ivory\Tests\Serializer\Fixture\ScalarFixture

Ivory\Tests\Serializer\Fixture\DateTimeFixture:
    properties:
        dateTime:
            type: DateTime
        formattedDateTime:
            type: DateTime<format='Y-m-d, H:i:s, P'>
        timeZonedDateTime:
            type: DateTime<timezone='Europe/Paris'>
        immutableDateTime:
            type: DateTimeImmutable
        formattedImmutableDateTime:
            type: DateTimeImmutable<format='Y-m-d, H:i:s, P'>
        timeZonedImmutableDateTime:
            type: DateTimeImmutable<timezone='Europe/Paris'>

Ivory\Tests\Serializer\Fixture\ExcludeFixture:
    exclusion_policy: none
    properties:
        foo:
            exclude: true
        bar: ~

Ivory\Tests\Serializer\Fixture\ExposeFixture:
    exclusion_policy: all
    properties:
        foo:
            expose: true
        bar: ~

Ivory\Tests\Serializer\Fixture\AccessorFixture:
    properties:
        name:
            accessor: getName

Ivory\Tests\Serializer\Fixture\MutatorFixture:
    properties:
        name:
            mutator: setName

Ivory\Tests\Serializer\Fixture\MaxDepthFixture:
    properties:
        parent:
            type: Ivory\Tests\Serializer\Fixture\MaxDepthFixture
            max_depth: 1
        children:
            type: array<value=Ivory\Tests\Serializer\Fixture\MaxDepthFixture>
            max_depth: 2
        orphanChildren:
            type: array<value=Ivory\Tests\Serializer\Fixture\MaxDepthFixture>
            max_depth: 1

Ivory\Tests\Serializer\Fixture\GroupFixture:
    properties:
        foo:
            groups: [group1, group2]
        bar:
            groups: [group1]
        baz:
            groups: [group2]
        bat: ~

Ivory\Tests\Serializer\Fixture\OrderFixture:
    order: [bar, foo]
    properties:
        foo: ~
        bar: ~

Ivory\Tests\Serializer\Fixture\AscFixture:
    order: ASC
    properties:
        foo: ~
        bar: ~

Ivory\Tests\Serializer\Fixture\DescFixture:
    order: DESC
    properties:
        bar: ~
        foo: ~

Ivory\Tests\Serializer\Fixture\ReadableFixture:
    properties:
        foo:
            readable: false
        bar: ~

Ivory\Tests\Serializer\Fixture\ReadableClassFixture:
    readable: false
    properties:
        foo:
            readable: true
        bar: ~

Ivory\Tests\Serializer\Fixture\WritableFixture:
    properties:
        foo:
            writable: false
        bar: ~

Ivory\Tests\Serializer\Fixture\WritableClassFixture:
    writable: false
    properties:
        foo:
            writable: true
        bar: ~

Ivory\Tests\Serializer\Fixture\VersionFixture:
    properties:
        foo:
            since: "1.0"
            until: "2.0"
        bar:
            since: "1.0"
        baz:
            until: "2.0"
        bat: ~

Ivory\Tests\Serializer\Fixture\XmlFixture:
    xml_root: xml
    properties:
        foo: ~
        bar:
            xml_attribute: true
        list: ~
        keyAsAttribute:
            xml_key_as_attribute: true
        keyAsNode:
            xml_key_as_node: true
        entry:
            xml_entry: item
        entryAttribute:
            xml_entry_attribute: name
        inline:
            xml_inline: true
            xml_entry: inline
            xml_entry_attribute: index

Ivory\Tests\Serializer\Fixture\XmlValueFixture:
    xml_root: xml
    properties:
        foo:
            xml_attribute: true
        bar:
            xml_value: true
